{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/dahn/holodeck/imports/ui/components/MtNavigation.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/dahn/holodeck/imports/ui/components/MtNavigation.vue","filename":"/home/dahn/holodeck/imports/ui/components/MtNavigation.vue","passPerPreset":false,"envName":"development","cwd":"/home/dahn/holodeck","root":"/home/dahn/holodeck","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/dahn/holodeck/imports/ui/components/MtNavigation.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/dahn/holodeck/imports/ui/components/MtNavigation.vue"}},"code":"var PageCollection;\nmodule.link(\"../../api/collections/PageCollection\", {\n  PageCollection: function (v) {\n    PageCollection = v;\n  }\n}, 0);\nmodule.exportDefault({\n  data: function () {\n    return {\n      session: this.$root.$data.session,\n      drawer: false,\n      group: null,\n      selectPage: false,\n      myCurrentPage: this.currentPage,\n      isSecondary: false\n    };\n  },\n  watch: {\n    group: function () {\n      this.drawer = false;\n    },\n    myCurrentPage: function (newVal) {\n      this.gotoPage(newVal);\n    }\n  },\n  created: function () {\n    if (this.$route.query.deck == \"secondary\") {\n      this.session.set(\"saveSession\", false);\n      this.isSecondary = true;\n    }\n  },\n  methods: {\n    gotoPage: function (nr) {\n      var path = \"/read/\" + this.session.currentBook + \"/\" + nr.toString();\n      this.gotoPath(path);\n    },\n    gotoPath: function (path) {\n      this.$router.push(path);\n      this.drawer = false;\n    },\n    forwardOnePage: function () {\n      if (this.currentPage < this.bookObject.pages.length) {\n        var pi = this.currentPage + 1;\n        this.gotoPage(pi);\n      }\n    },\n    backwardOnePage: function () {\n      if (this.session.currentPage > 1) this.session.currentPage--;\n    },\n    toCurrentPage: function () {\n      var mp = document.getElementsByClassName(\"currentPage\")[0];\n      if (!mp && this.currentPage) this.gotoPage(this.currentPage);else mp.scrollIntoView(false);\n    },\n    pageToPinboard: function () {\n      var currentPages = document.getElementsByClassName(\"currentPage\");\n      var node = currentPages[0];\n      var clone = node.cloneNode(true);\n      clone.classList.remove(\"currentPage\");\n      clone.querySelectorAll(\".sagecell_evalButton\").forEach(function (bt) {\n        bt.remove();\n      });\n      clone.querySelectorAll(\".sagecell_messages\").forEach(function (ms) {\n        ms.remove();\n      });\n      var cloneString = clone.innerHTML;\n      var title = PageCollection.findOne({\n        _id: this.pageIds.cur\n      }).title;\n      this.session.pinboard.push({\n        title: title,\n        content: cloneString,\n        bookId: this.session.currentBook,\n        pageNr: this.session.currentPage\n      });\n    },\n    logout: function () {\n      this.gotoPath(\"/\");\n      Meteor.logout();\n    }\n  },\n  computed: {\n    bookPageIds: function () {\n      return this.bookObject.pages;\n    },\n    currentPage: function () {\n      return this.session.currentPage;\n    },\n    pageIds: function () {\n      var cur0 = this.currentPage,\n          pre0 = this.session.settings.pre,\n          post0 = this.session.settings.post;\n      var cur = cur0 < 1 ? 1 : cur0 - 1;\n      var preIds = [],\n          postIds = [],\n          preMin = pre0 > 0 ? cur0 : cur + pre0,\n          postMax = post0 < 0 ? cur0 : cur0 + post0;\n\n      for (var i = preMin; i < cur; i++) {\n        if (i >= 0) preIds.push(this.bookPageIds[i]);\n      }\n\n      for (var _i = cur + 1; _i < postMax; _i++) {\n        if (_i < this.bookObject.pages.length) postIds.push(this.bookPageIds[_i]);\n      }\n\n      return {\n        pre: preIds,\n        cur: this.bookPageIds[cur],\n        post: postIds\n      };\n    },\n    allSet: function () {\n      if (!this.session.currentBook || this.session.currentBook == \"null\") return false;\n      if (!this.session.books[this.session.currentBook]) this.session.books[this.session.currentBook] = 1;\n      return true;\n    }\n  },\n  meteor: {\n    bookObject: function () {\n      var bo = PageCollection.findOne({\n        _id: this.session.currentBook\n      });\n      return bo ? bo : {\n        title: \"Current Book not Found\",\n        pages: []\n      };\n    },\n    selectablePages: function () {\n      var selPages = [],\n          maxLevel = this.session.tocLevel;\n\n      for (var i = 1; i <= this.bookPageIds.length; i++) {\n        var pi = this.bookPageIds[i - 1];\n        var page = PageCollection.findOne({\n          _id: pi\n        });\n        var title = page.title;\n        if (page.level == 0 && maxLevel == 999) selPages.push({\n          text: \"(\" + i.toString() + \") \" + page.title,\n          value: i\n        });else if (0 < page.level && page.level <= maxLevel) {\n          var pre = new Array(page.level).join(\"-\");\n          selPages.push({\n            text: pre + \" \" + page.title,\n            value: i\n          });\n        }\n      }\n\n      return selPages;\n    },\n    currentUser: function () {\n      return Meteor.user();\n    },\n    isAdmin: function () {\n      if (this.currentUser) {\n        return this.currentUser.username === \"admin\";\n      }\n\n      return false;\n    }\n  }\n});","map":{"version":3,"sources":["/home/dahn/holodeck/imports/ui/components/MtNavigation.vue"],"names":["PageCollection","module","link","v","exportDefault","data","session","$root","$data","drawer","group","selectPage","myCurrentPage","currentPage","isSecondary","watch","newVal","gotoPage","created","$route","query","deck","set","methods","nr","path","currentBook","toString","gotoPath","$router","push","forwardOnePage","bookObject","pages","length","pi","backwardOnePage","toCurrentPage","mp","document","getElementsByClassName","scrollIntoView","pageToPinboard","currentPages","node","clone","cloneNode","classList","remove","querySelectorAll","forEach","bt","ms","cloneString","innerHTML","title","findOne","_id","pageIds","cur","pinboard","content","bookId","pageNr","logout","Meteor","computed","bookPageIds","cur0","pre0","settings","pre","post0","post","preIds","postIds","preMin","postMax","i","allSet","books","meteor","bo","selectablePages","selPages","maxLevel","tocLevel","page","level","text","value","Array","join","currentUser","user","isAdmin","username"],"mappings":"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","sourcesContent":["\nimport { PageCollection } from \"../../api/collections/PageCollection\";\nexport default {\n  data() {\n    return {\n      session: this.$root.$data.session,\n      drawer: false,\n      group: null,\n      selectPage: false,\n      myCurrentPage: this.currentPage,\n      isSecondary: false,\n    };\n  },\n  watch: {\n    group() {\n      this.drawer = false;\n    },\n    myCurrentPage(newVal) {\n      this.gotoPage(newVal);\n    },\n  },\n  created() {\n    if (this.$route.query.deck == \"secondary\") {\n      this.session.set(\"saveSession\", false);\n      this.isSecondary = true;\n    }\n  },\n  methods: {\n    gotoPage(nr) {\n      let path = \"/read/\" + this.session.currentBook + \"/\" + nr.toString();\n      this.gotoPath(path);\n    },\n    gotoPath(path) {\n      this.$router.push(path);\n      this.drawer = false;\n    },\n    forwardOnePage() {\n      if (this.currentPage < this.bookObject.pages.length) {\n        let pi = this.currentPage + 1;\n        this.gotoPage(pi);\n      }\n    },\n    backwardOnePage() {\n      if (this.session.currentPage > 1) this.session.currentPage--;\n    },\n    toCurrentPage() {\n      let mp = document.getElementsByClassName(\"currentPage\")[0];\n      if (!mp && this.currentPage) this.gotoPage(this.currentPage);\n      else mp.scrollIntoView(false);\n    },\n    pageToPinboard() {\n      let currentPages = document.getElementsByClassName(\"currentPage\");\n      let node = currentPages[0];\n      let clone = node.cloneNode(true);\n      clone.classList.remove(\"currentPage\");\n      clone.querySelectorAll(\".sagecell_evalButton\").forEach((bt) => {\n        bt.remove();\n      });\n      clone.querySelectorAll(\".sagecell_messages\").forEach((ms) => {\n        ms.remove();\n      });\n      let cloneString = clone.innerHTML;\n      let title = PageCollection.findOne({ _id: this.pageIds.cur }).title;\n      this.session.pinboard.push({\n        title: title,\n        content: cloneString,\n        bookId: this.session.currentBook,\n        pageNr: this.session.currentPage,\n      });\n    },\n    logout() {\n      this.gotoPath(\"/\");\n      Meteor.logout();\n    },\n  },\n  computed: {\n    bookPageIds() {\n      return this.bookObject.pages;\n    },\n    currentPage() {\n      return this.session.currentPage;\n    },\n    pageIds() {\n      let cur0 = this.currentPage,\n        pre0 = this.session.settings.pre,\n        post0 = this.session.settings.post;\n      let cur = cur0 < 1 ? 1 : cur0 - 1;\n      let preIds = [],\n        postIds = [],\n        preMin = pre0 > 0 ? cur0 : cur + pre0,\n        postMax = post0 < 0 ? cur0 : cur0 + post0;\n      for (let i = preMin; i < cur; i++) {\n        if (i >= 0) preIds.push(this.bookPageIds[i]);\n      }\n      for (let i = cur + 1; i < postMax; i++) {\n        if (i < this.bookObject.pages.length) postIds.push(this.bookPageIds[i]);\n      }\n      return { pre: preIds, cur: this.bookPageIds[cur], post: postIds };\n    },\n    allSet() {\n      if (!this.session.currentBook || this.session.currentBook == \"null\")\n        return false;\n      if (!this.session.books[this.session.currentBook])\n        this.session.books[this.session.currentBook] = 1;\n      return true;\n    },\n  },\n  meteor: {\n    bookObject() {\n      const bo = PageCollection.findOne({ _id: this.session.currentBook });\n      return bo ? bo : { title: \"Current Book not Found\", pages: [] };\n    },\n    selectablePages() {\n      let selPages = [],\n        maxLevel = this.session.tocLevel;\n\n      for (let i = 1; i <= this.bookPageIds.length; i++) {\n        let pi = this.bookPageIds[i - 1];\n        let page = PageCollection.findOne({ _id: pi });\n        let title = page.title;\n        if (page.level == 0 && maxLevel == 999)\n          selPages.push({\n            text: \"(\" + i.toString() + \") \" + page.title,\n            value: i,\n          });\n        else if (0 < page.level && page.level <= maxLevel) {\n          let pre = new Array(page.level).join(\"-\");\n          selPages.push({ text: pre + \" \" + page.title, value: i });\n        }\n      }\n      return selPages;\n    },\n\n    currentUser() {\n      return Meteor.user();\n    },\n    isAdmin() {\n      if (this.currentUser) {\n        return this.currentUser.username === \"admin\";\n      }\n      return false;\n    },\n  },\n};\n"]},"sourceType":"module","hash":"2e927cce9ca3c1b6a7a622631069eab415793bf7"}
