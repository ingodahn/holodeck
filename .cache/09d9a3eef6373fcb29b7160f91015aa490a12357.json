{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue","filename":"/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue","passPerPreset":false,"envName":"development","cwd":"/home/dahn/holodeck","root":"/home/dahn/holodeck","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue"}},"code":"var PageCollection;\nmodule.link(\"../../api/collections/PageCollection\", {\n  PageCollection: function (v) {\n    PageCollection = v;\n  }\n}, 0);\nvar relationMixin;\nmodule.link(\"../mixins/relationMixin.js\", {\n  \"default\": function (v) {\n    relationMixin = v;\n  }\n}, 1);\nvar SageCell;\nmodule.link(\"./SageCell.vue\", {\n  \"default\": function (v) {\n    SageCell = v;\n  }\n}, 2);\nmodule.exportDefault({\n  components: {\n    SageCell: SageCell\n  },\n  props: {\n    script: {\n      type: String,\n      \"default\": \"1+1\"\n    },\n    currentPage: {\n      type: Boolean,\n      \"default\": false\n    },\n    pageId: {\n      type: String,\n      \"default\": \"none\"\n    }\n  },\n  mixins: [relationMixin],\n  data: function () {\n    return {\n      session: this.$root.$data.session,\n      evaluated: this.$root.$data.session.evaluated.has(this.pageId),\n      myScript: this.script,\n      allRequired: false,\n      refreshRequirements: false\n    };\n  },\n  created: function () {\n    var ff = this.checkStatus;\n    this.$root.$on(\"evaluationUpdated\", ff);\n  },\n  methods: {\n    checkStatus: function () {\n      this.evaluated = this.$root.$data.session.evaluated.has(this.pageId);\n      this.refreshRequirements = !this.refreshRequirements; // to force update\n    },\n    setEvaluated: function () {\n      var _this = this;\n\n      this.$root.$data.session.evaluated.add(this.pageId); // record evaluation in session\n\n      this.evaluated = true;\n      if (this.allRequired) this.missingRequired.forEach(function (id) {\n        _this.$root.$data.session.evaluated.add(id);\n      });\n      this.$root.$emit(\"evaluationUpdated\"); // tell other components\n    },\n    getRelationTrans: function (rel) {\n      var labelObject = PageCollection.findOne({\n        name: \"LabelForId\",\n        target: this.pageId\n      });\n\n      if (labelObject) {\n        var labelInit = new Set();\n        labelInit.add(labelObject.source);\n        var reqs = Array.from(this.tcClosure(rel, labelInit, 1));\n        reqs.shift();\n        return reqs; // should be labels\n      } else return [];\n    },\n    addRequired: function () {\n      var sc = \"\";\n      var missReq = this.missingRequired;\n\n      if (missReq.length > 0) {\n        var bookPages = PageCollection.findOne({\n          _id: this.session.currentBook\n        }).pages;\n        bookPages.forEach(function (id) {\n          if (missReq.indexOf(id) > -1) {\n            var node = PageCollection.findOne({\n              _id: id\n            });\n            sc += node.data + \"\\n\"; // doesn't work for html\n          }\n        });\n      }\n\n      sc += this.script;\n      this.allRequired = true;\n      this.myScript = sc;\n    }\n  },\n  computed: {\n    missingRequired: function () {\n      var _this2 = this;\n\n      this.refreshRequirements; // to force re-computation\n\n      var reqs = this.labels2ids(this.getRelationTrans(\"requires\"));\n      var mreqs = [];\n      reqs.forEach(function (r) {\n        if (!_this2.$root.$data.session.evaluated.has(r)) mreqs.push(r);\n      });\n      return mreqs; // returns Ids\n    },\n    hasMissing: function () {\n      return this.missingRequired.length;\n    },\n    mainColSize: function () {\n      return hasMissing ? 11 : 12;\n    },\n    isCurrent: function () {\n      this.refreshRequirements; // to force re-computation\n\n      var ev = this.evaluated ? \"evaluated\" : \"unevaluated\";\n      if (this.missingRequired.length && !this.allRequired && !this.evaluated) ev = \"unavailable\";\n      var cur = this.currentPage ? \"currentPage\" : \"\";\n      return cur + \" \" + ev;\n    }\n  }\n});","map":{"version":3,"sources":["/home/dahn/holodeck/imports/ui/components/SageCellWrapper.vue"],"names":["PageCollection","module","link","v","relationMixin","SageCell","exportDefault","components","props","script","type","String","currentPage","Boolean","pageId","mixins","data","session","$root","$data","evaluated","has","myScript","allRequired","refreshRequirements","created","ff","checkStatus","$on","methods","setEvaluated","add","missingRequired","forEach","id","$emit","getRelationTrans","rel","labelObject","findOne","name","target","labelInit","Set","source","reqs","Array","from","tcClosure","shift","addRequired","sc","missReq","length","bookPages","_id","currentBook","pages","indexOf","node","computed","labels2ids","mreqs","r","push","hasMissing","mainColSize","isCurrent","ev","cur"],"mappings":"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","sourcesContent":["\nimport { PageCollection } from \"../../api/collections/PageCollection\";\nimport relationMixin from \"../mixins/relationMixin.js\";\nimport SageCell from \"./SageCell.vue\";\n\nexport default {\n  components: { SageCell },\n  props: {\n    script: {\n      type: String,\n      default: \"1+1\",\n    },\n    currentPage: {\n      type: Boolean,\n      default: false,\n    },\n    pageId: {\n      type: String,\n      default: \"none\",\n    },\n  },\n  mixins: [relationMixin],\n  data() {\n    return {\n      session: this.$root.$data.session,\n      evaluated: this.$root.$data.session.evaluated.has(this.pageId),\n      myScript: this.script,\n      allRequired: false,\n      refreshRequirements: false\n    };\n  },\n  created() {\n    let ff = this.checkStatus;\n    this.$root.$on(\"evaluationUpdated\", ff);\n  },\n  methods: {\n    checkStatus() {\n      this.evaluated = this.$root.$data.session.evaluated.has(this.pageId);\n      this.refreshRequirements=!this.refreshRequirements; // to force update\n    },\n    setEvaluated() {\n      this.$root.$data.session.evaluated.add(this.pageId); // record evaluation in session\n      this.evaluated = true;\n      if (this.allRequired)\n        this.missingRequired.forEach((id) => {\n          this.$root.$data.session.evaluated.add(id);\n        });\n      this.$root.$emit(\"evaluationUpdated\"); // tell other components\n    },\n    getRelationTrans(rel) {\n      let labelObject = PageCollection.findOne({\n        name: \"LabelForId\",\n        target: this.pageId,\n      });\n      if (labelObject) {\n        let labelInit = new Set();\n        labelInit.add(labelObject.source);\n        let reqs = Array.from(this.tcClosure(rel, labelInit, 1));\n        reqs.shift();\n        return reqs; // should be labels\n      } else return [];\n    },\n    addRequired() {\n      let sc = \"\";\n      let missReq = this.missingRequired;\n      if (missReq.length > 0) {\n        const bookPages=PageCollection.findOne({_id: this.session.currentBook}).pages;\n        bookPages.forEach((id) => {\n          if (missReq.indexOf(id) > -1) {\n            let node = PageCollection.findOne({ _id: id });\n        sc += node.data + \"\\n\"; // doesn't work for html\n          }\n      });\n      }\n      sc += this.script;\n      this.allRequired = true;\n      this.myScript = sc;\n    },\n  },\n  computed: {\n    missingRequired() {\n      this.refreshRequirements; // to force re-computation\n      let reqs = this.labels2ids(this.getRelationTrans(\"requires\"));\n      let mreqs = [];\n      reqs.forEach((r) => {\n        if (!this.$root.$data.session.evaluated.has(r)) mreqs.push(r);\n      });\n      return mreqs; // returns Ids\n    },\n    hasMissing() {\n      return this.missingRequired.length;\n    },\n    mainColSize() {\n      return hasMissing ? 11 : 12;\n    },\n    isCurrent() {\n      this.refreshRequirements; // to force re-computation\n      let ev = this.evaluated ? \"evaluated\" : \"unevaluated\";\n      if (this.missingRequired.length  && !this.allRequired && !this.evaluated) ev = \"unavailable\";\n      const cur = this.currentPage ? \"currentPage\" : \"\";\n      return cur + \" \" + ev;\n    },\n  },\n};\n"]},"sourceType":"module","hash":"09d9a3eef6373fcb29b7160f91015aa490a12357"}
