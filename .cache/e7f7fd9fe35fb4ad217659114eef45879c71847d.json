{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/dahn/holodeck/imports/ui/views/Admin.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/dahn/holodeck/imports/ui/views/Admin.vue","filename":"/home/dahn/holodeck/imports/ui/views/Admin.vue","passPerPreset":false,"envName":"development","cwd":"/home/dahn/holodeck","root":"/home/dahn/holodeck","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/dahn/holodeck/imports/ui/views/Admin.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/dahn/holodeck/imports/ui/views/Admin.vue"}},"code":"var _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 0);\nvar PageCollection;\nmodule.link(\"../../api/collections/PageCollection\", {\n  PageCollection: function (v) {\n    PageCollection = v;\n  }\n}, 0);\nvar Random;\nmodule.link(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar UserManagement;\nmodule.link(\"../components/UserManagement.vue\", {\n  \"default\": function (v) {\n    UserManagement = v;\n  }\n}, 2);\nmodule.exportDefault({\n  data: function () {\n    return {\n      adminMode: \"importPlayer\",\n      sessionFile: null,\n      bookToDelete: null\n    };\n  },\n  components: {\n    UserManagement: UserManagement\n  },\n  watch: {},\n  computed: {\n    importFile: function () {\n      return this.adminMode == \"importJupyter\" ? {\n        type: \".ipynb\",\n        label: \"Click here to select a Jupyter notebook file\"\n      } : {\n        type: \".json\",\n        label: \"Click here to select a JSON file\"\n      };\n    }\n  },\n  methods: {\n    clearData: function () {\n      if (confirm(\"Are you SURE you REALLY want to delete all data on \" + window.location.href + \"?\")) {\n        this.clearPages({});\n      }\n    },\n    makeExport: function () {\n      var allDocs = PageCollection.find({}).fetch();\n      var expString = \"export const hddata = \" + JSON.stringify(allDocs) + \";\";\n\n      var FileSaver = require(\"file-saver\");\n\n      var blob = new Blob([expString], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      FileSaver.saveAs(blob, \"hdData.js\");\n    },\n    deleteBook: function () {\n      if (!this.bookToDelete) return;\n      var bookObject = PageCollection.findOne({\n        _id: this.bookToDelete,\n        type: \"book\"\n      });\n      bookObject.pages.forEach(function (pid) {\n        var pref = PageCollection.findOne({\n          name: \"LabelForId\",\n          target: pid\n        });\n\n        if (pref) {\n          Meteor.call(\"deleteItem\", {\n            type: \"relation\",\n            $or: [{\n              source: pref.source\n            }, {\n              target: pref.source\n            }]\n          });\n        }\n\n        Meteor.call(\"deleteItem\", {\n          type: \"relation\",\n          $or: [{\n            source: pid\n          }, {\n            target: pid\n          }]\n        });\n        Meteor.call(\"deleteItem\", {\n          _id: pid\n        });\n      });\n      Meteor.call(\"deleteItem\", {\n        _id: bookObject._id\n      });\n    },\n    importBook: function () {\n      var _this = this;\n\n      if (!this.sessionFile) {\n        alert(\"No File Chosen\");\n        return;\n      }\n\n      var reader = new FileReader();\n      reader.readAsText(this.sessionFile);\n\n      reader.onload = function (e) {\n        _this.makeBook(e.target.result);\n      };\n    },\n    makeBook: function (data) {\n      var bookData = JSON.parse(data);\n      if (this.adminMode == \"importJupyter\") this.makeJupyterBook(bookData);else this.makePlayerBook(bookData);\n    },\n    // Making Jupyter Book\n    checkMetadata: function (bd) {\n      if (!this.adminMode == \"importJupyter\") return true;\n      var ok = true;\n      var pages = bd.cells;\n\n      if (!pages.length) {\n        alert(\"No pages found\");\n        return false;\n      }\n\n      if (!pages[0].metadata.book) {\n        alert(\"Error: Book has no metadata\");\n        ok = false;\n      } else {\n        for (var _i = 0, _arr = [\"title\", \"authors\", \"label\", \"description\"]; _i < _arr.length; _i++) {\n          var item = _arr[_i];\n\n          if (!pages[0].metadata.book[item]) {\n            alert(\"Error: Book metadata \" + item + \" missing\");\n            ok = false;\n          }\n        }\n      } // Checking backward references and labels\n\n\n      var labels = new Set();\n\n      for (var i = 0; i < pages.length; i++) {\n        var md = pages[i].metadata;\n\n        if (md) {\n          if (md.label) {\n            if (labels.has(md.label)) {\n              alert('Error: Duplicate label ' + md.label + ' at page ' + i.toString);\n              ok = false;\n            } else labels.add(md.label);\n          } else {\n            if (md['requires'] && md['requires'].length) {\n              alert('Error: Missing label at page ' + i.toString() + ' with references ' + md['requires'].join());\n\n              for (var _iterator = md['requires'], _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n                var _ref;\n\n                if (_isArray) {\n                  if (_i2 >= _iterator.length) break;\n                  _ref = _iterator[_i2++];\n                } else {\n                  _i2 = _iterator.next();\n                  if (_i2.done) break;\n                  _ref = _i2.value;\n                }\n\n                var _rr = _ref;\n\n                if (!labels.has(_rr)) {\n                  alert('Error: For page ' + i.toString() + 'Reference ' + _rr + ' not found');\n                  ok = false;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return ok;\n    },\n    makeJupyterBook: function (bookData) {\n      var _this2 = this;\n\n      console.log(\"Admin-138: makeJupiterBook called\");\n      if (!this.checkMetadata(bookData)) return;\n      var bookId = Random.id([17]);\n      var bookPages = [];\n\n      if (!bookData.cells.length) {\n        alert(\"N0 pages found, aborting\");\n        return;\n      } // TODO: BookName for references\n\n\n      var firstCell = bookData.cells[0];\n      var bookMetaData = {\n        title: firstCell.metadata.book.title,\n        authors: firstCell.metadata.book.authors,\n        description: firstCell.metadata.book.description,\n        label: firstCell.metadata.book.label\n      };\n      bookData.cells.forEach(function (c) {\n        var pageId = _this2.makeJupyterCell(c, bookMetaData.label);\n\n        bookPages.push(pageId);\n      });\n      Meteor.call(\"insertItem\", this.makeBookObject(bookMetaData, bookPages, bookId));\n      Meteor.call(\"insertItem\", {\n        type: \"relation\",\n        name: \"LabelForId\",\n        source: bookMetaData.label,\n        target: bookId\n      });\n      alert(\"Book \" + bookMetaData.title + \" with \" + bookPages.length.toString() + \" pages saved\");\n      this.checkReferences(bookPages);\n    },\n    makeJupyterCell: function (c, bookLabel) {\n      var cdata0 = c.source.join(\"\"); // Next line to overcome markdown\n\n      var cdata = c.cell_type == \"markdown\" ? cdata0.replace(/\\n\\n/gm, \"_XXX_\").replace(/\\n/gm, \" \").replace(/_XXX_/gm, \"\\n\\n\") : cdata0;\n      var cc = {\n        type: c.cell_type,\n        data: cdata,\n        level: c.cell_type == \"code\" ? 0 : this.getLevel(cdata)\n      }; // References are implemented through relations LabelForId and label requires label\n      // labels have the form bookLabel/pageLabel\n\n      if (c.metadata.label) cc.label = bookLabel + \"/\" + c.metadata.label;\n      cc.title = c.metadata.title ? c.metadata.title : this.makeTitle(c.source, c.cell_type);\n      var pageId = Random.id([17]);\n      cc._id = pageId;\n      Meteor.call(\"insertItem\", cc);\n      if (cc.label) Meteor.call(\"insertItem\", {\n        type: \"relation\",\n        name: \"LabelForId\",\n        source: cc.label,\n        target: pageId\n      }); // Currently only requires within the same book\n\n      if (c.metadata.requires) {\n        if (!(_typeof(c.metadata.requires) == 'object')) {\n          alert(\"Error: Requires for label \" + c.metadata.label + ' must be an array.');\n          return;\n        }\n\n        c.metadata.requires.forEach(function (referredLabel) {\n          Meteor.call(\"insertItem\", {\n            type: \"relation\",\n            name: \"requires\",\n            source: cc.label,\n            target: bookLabel + \"/\" + referredLabel\n          });\n        });\n      }\n\n      return pageId;\n    },\n    makeTitle: function (data, type) {\n      return type == \"code\" ? data[0] : data.join(\"\").replace(/(\\s\\s+)/gm, \" \").replace(/(#+)/gm, \"\").replace(/(<\\/?[^>]*>)/gm, \"\").split(\" \").slice(0, 5).join(\" \");\n    },\n    getLevel: function (data) {\n      var re = /<h(\\d)/;\n\n      if (re.exec(data)) {\n        //console.log(parseInt(re.exec(data)[1]), 'from h')\n        return parseInt(re.exec(data)[1]);\n      }\n\n      re = /^(#*)/;\n\n      if (re.exec(data)) {\n        //console.log(re.exec(data)[1].length, 'from #')\n        return re.exec(data)[1].length;\n      }\n\n      return 0;\n    },\n    checkReferences: function (idList) {\n      idList.forEach(function (id) {\n        var lfi = PageCollection.findOne({\n          name: \"LabelForId\",\n          target: id\n        });\n\n        if (lfi) {\n          var refs = PageCollection.find({\n            name: \"requires\",\n            source: lfi.source\n          }).fetch();\n          refs.forEach(function (refLabel) {\n            var refIdObject = PageCollection.findOne({\n              name: \"LabelForId\",\n              source: refLabel\n            });\n            if (!refIdObject) console.log(\"Admin: id for label\", refLabel, \"not found\");else if (!PageCollection.findOne({\n              _id: refIdObject.source\n            })) console.log(\"Admin: Page for id\", refIdObject.source, \"for Reference\", refLabel, \"not found\");\n          });\n        }\n      });\n    },\n    // Making Player Book\n    makePlayerBook: function (bookData) {\n      var bookId = Random.id([17]); //alert(\"Making book\");\n\n      var bookPages = [];\n      bookData.data.forEach(function (element) {\n        var pageId = Random.id([17]);\n        element._id = pageId;\n        Meteor.call(\"insertItem\", element);\n        bookPages.push(pageId);\n      });\n      Meteor.call(\"insertItem\", this.makeBookObject(bookData, bookPages, bookId));\n    },\n    clearPages: function (selection) {\n      Meteor.call(\"deleteItem\", selection);\n      /*\n      const myPages = PageCollection.find(selection).fetch(); \n      myPages.forEach(e => Meteor.call('deleteItem',{_id: e._id}));\n      */\n\n      alert(\"Clear of selected data completed\");\n      if (!PageCollection.find({\n        title: \"|| Free Pages\"\n      })) Meteor.call(\"insertItem\", {\n        type: \"book\",\n        title: \"|| Free Pages\",\n        authors: \"Various Authors\",\n        description: \"Pages not assigned to any book\",\n        pages: []\n      });\n    },\n    makeBookObject: function (bookData, bookPages, bookId) {\n      return {\n        _id: bookId,\n        type: \"book\",\n        title: bookData.title,\n        authors: bookData.authors,\n        description: bookData.description,\n        pages: bookPages\n      };\n    }\n  },\n  meteor: {\n    pages: function () {\n      var pc = PageCollection.find({}).fetch();\n      return pc;\n    },\n    books: function () {\n      return PageCollection.find({\n        type: \"book\"\n      }, {\n        sort: {\n          title: 1\n        }\n      }).fetch();\n    }\n  }\n});","map":{"version":3,"sources":["/home/dahn/holodeck/imports/ui/views/Admin.vue"],"names":["_typeof","module","link","default","v","PageCollection","Random","UserManagement","exportDefault","data","adminMode","sessionFile","bookToDelete","components","watch","computed","importFile","type","label","methods","clearData","confirm","window","location","href","clearPages","makeExport","allDocs","find","fetch","expString","JSON","stringify","FileSaver","require","blob","Blob","saveAs","deleteBook","bookObject","findOne","_id","pages","forEach","pid","pref","name","target","Meteor","call","$or","source","importBook","alert","reader","FileReader","readAsText","onload","e","makeBook","result","bookData","parse","makeJupyterBook","makePlayerBook","checkMetadata","bd","ok","cells","length","metadata","book","item","labels","Set","i","md","has","toString","add","join","rr","console","log","bookId","id","bookPages","firstCell","bookMetaData","title","authors","description","c","pageId","makeJupyterCell","push","makeBookObject","checkReferences","bookLabel","cdata0","cdata","cell_type","replace","cc","level","getLevel","makeTitle","requires","referredLabel","split","slice","re","exec","parseInt","idList","lfi","refs","refLabel","refIdObject","element","selection","meteor","pc","books","sort"],"mappings":"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","sourcesContent":["\nimport { PageCollection } from \"../../api/collections/PageCollection\";\nimport { Random } from \"meteor/random\";\nimport UserManagement from \"../components/UserManagement.vue\";\nexport default {\n  data() {\n    return {\n      adminMode: \"importPlayer\",\n      sessionFile: null,\n      bookToDelete: null,\n    };\n  },\n  components: { UserManagement },\n  watch: {},\n  computed: {\n    importFile() {\n      return this.adminMode == \"importJupyter\"\n        ? {\n            type: \".ipynb\",\n            label: \"Click here to select a Jupyter notebook file\",\n          }\n        : { type: \".json\", label: \"Click here to select a JSON file\" };\n    },\n  },\n  methods: {\n    clearData() {\n      if (\n        confirm(\n          \"Are you SURE you REALLY want to delete all data on \" +\n            window.location.href +\n            \"?\"\n        )\n      ) {\n        this.clearPages({});\n      }\n    },\n\n    makeExport() {\n      const allDocs = PageCollection.find({}).fetch();\n      var expString = \"export const hddata = \" + JSON.stringify(allDocs) + \";\";\n      var FileSaver = require(\"file-saver\");\n      var blob = new Blob([expString], { type: \"text/plain;charset=utf-8\" });\n      FileSaver.saveAs(blob, \"hdData.js\");\n    },\n\n    deleteBook() {\n      if (!this.bookToDelete) return;\n      const bookObject = PageCollection.findOne({\n        _id: this.bookToDelete,\n        type: \"book\",\n      });\n      bookObject.pages.forEach((pid) => {\n        let pref = PageCollection.findOne({ name: \"LabelForId\", target: pid });\n        if (pref) {\n          Meteor.call(\"deleteItem\", {\n            type: \"relation\",\n            $or: [{ source: pref.source }, { target: pref.source }],\n          });\n        }\n        Meteor.call(\"deleteItem\", {\n          type: \"relation\",\n          $or: [{ source: pid }, { target: pid }],\n        });\n        Meteor.call(\"deleteItem\", { _id: pid });\n      });\n      Meteor.call(\"deleteItem\", { _id: bookObject._id });\n    },\n    importBook() {\n      if (!this.sessionFile) {\n        alert(\"No File Chosen\");\n        return;\n      }\n      var reader = new FileReader();\n      reader.readAsText(this.sessionFile);\n      reader.onload = (e) => {\n        this.makeBook(e.target.result);\n      };\n    },\n    makeBook(data) {\n      const bookData = JSON.parse(data);\n      if (this.adminMode == \"importJupyter\") this.makeJupyterBook(bookData);\n      else this.makePlayerBook(bookData);\n    },\n    // Making Jupyter Book\n    checkMetadata(bd) {\n      if (!this.adminMode == \"importJupyter\") return true;\n      let ok = true;\n      const pages = bd.cells;\n      if (!pages.length) {\n        alert(\"No pages found\");\n        return false;\n      }\n      if (!pages[0].metadata.book) {\n        alert(\"Error: Book has no metadata\");\n        ok = false;\n      } else {\n        for (let item of [\"title\", \"authors\", \"label\", \"description\"]) {\n          if (!pages[0].metadata.book[item]) {\n            alert(\"Error: Book metadata \" + item + \" missing\");\n            ok=false;\n          }\n        }\n      }\n      // Checking backward references and labels\n      let labels = new Set;\n      for (let i=0; i < pages.length; i++) {\n        let md=pages[i].metadata;\n        if (md) {\n          if (md.label) {\n            if (labels.has(md.label)) {\n              alert('Error: Duplicate label '+md.label+' at page '+i.toString)\n              ok=false;\n            } else labels.add(md.label);\n          } else {\n            if (md['requires'] && md['requires'].length) {\n              alert('Error: Missing label at page '+i.toString()+ ' with references '+md['requires'].join());\n              for (let rr of md['requires']) {\n                if (!labels.has(rr)) {\n                  alert('Error: For page '+i.toString()+'Reference '+rr+' not found');\n                  ok= false;\n                }\n              }\n            }\n          }\n        }\n      }\n      return ok;\n    },\n    makeJupyterBook(bookData) {\n      console.log(\"Admin-138: makeJupiterBook called\");\n      if (! this.checkMetadata(bookData)) return;\n      let bookId = Random.id([17]);\n      let bookPages = [];\n      if (!bookData.cells.length) {\n        alert(\"N0 pages found, aborting\");\n        return;\n      }\n      // TODO: BookName for references\n      let firstCell = bookData.cells[0];\n      let bookMetaData = {\n        title: firstCell.metadata.book.title,\n        authors: firstCell.metadata.book.authors,\n        description: firstCell.metadata.book.description,\n        label: firstCell.metadata.book.label\n      };\n      bookData.cells.forEach((c) => {\n        let pageId = this.makeJupyterCell(c, bookMetaData.label);\n        bookPages.push(pageId);\n      });\n      Meteor.call(\n        \"insertItem\",\n        this.makeBookObject(bookMetaData, bookPages, bookId)\n      );\n      Meteor.call(\"insertItem\", {\n        type: \"relation\",\n        name: \"LabelForId\",\n        source: bookMetaData.label,\n        target: bookId,\n      });\n      alert(\n        \"Book \" +\n          bookMetaData.title +\n          \" with \" +\n          bookPages.length.toString() +\n          \" pages saved\"\n      );\n      this.checkReferences(bookPages);\n    },\n    makeJupyterCell(c, bookLabel) {\n      let cdata0 = c.source.join(\"\");\n      // Next line to overcome markdown\n      let cdata =\n        c.cell_type == \"markdown\"\n          ? cdata0\n              .replace(/\\n\\n/gm, \"_XXX_\")\n              .replace(/\\n/gm, \" \")\n              .replace(/_XXX_/gm, \"\\n\\n\")\n          : cdata0;\n      let cc = {\n        type: c.cell_type,\n        data: cdata,\n        level: c.cell_type == \"code\" ? 0 : this.getLevel(cdata),\n      };\n      // References are implemented through relations LabelForId and label requires label\n      // labels have the form bookLabel/pageLabel\n      if (c.metadata.label) cc.label = bookLabel + \"/\" + c.metadata.label;\n      cc.title = c.metadata.title\n        ? c.metadata.title\n        : this.makeTitle(c.source, c.cell_type);\n      const pageId = Random.id([17]);\n      cc._id = pageId;\n      Meteor.call(\"insertItem\", cc);\n      if (cc.label)\n        Meteor.call(\"insertItem\", {\n          type: \"relation\",\n          name: \"LabelForId\",\n          source: cc.label,\n          target: pageId,\n        });\n      // Currently only requires within the same book\n      if (c.metadata.requires) {\n        if (!(typeof c.metadata.requires == 'object')) {\n          alert(\"Error: Requires for label \"+c.metadata.label+' must be an array.');\n          return;\n        }\n        c.metadata.requires.forEach((referredLabel) => {\n          Meteor.call(\"insertItem\", {\n            type: \"relation\",\n            name: \"requires\",\n            source: cc.label,\n            target: bookLabel + \"/\" + referredLabel,\n          });\n        });\n      }\n      return pageId;\n    },\n    makeTitle(data, type) {\n      return type == \"code\"\n        ? data[0]\n        : data\n            .join(\"\")\n            .replace(/(\\s\\s+)/gm, \" \")\n            .replace(/(#+)/gm, \"\")\n            .replace(/(<\\/?[^>]*>)/gm, \"\")\n            .split(\" \")\n            .slice(0, 5)\n            .join(\" \");\n    },\n    getLevel(data) {\n      let re = /<h(\\d)/;\n      if (re.exec(data)) {\n        //console.log(parseInt(re.exec(data)[1]), 'from h')\n        return parseInt(re.exec(data)[1]);\n      }\n      re = /^(#*)/;\n      if (re.exec(data)) {\n        //console.log(re.exec(data)[1].length, 'from #')\n        return re.exec(data)[1].length;\n      }\n      return 0;\n    },\n\n    checkReferences(idList) {\n      idList.forEach((id) => {\n        let lfi = PageCollection.findOne({ name: \"LabelForId\", target: id });\n        if (lfi) {\n          let refs = PageCollection.find({\n            name: \"requires\",\n            source: lfi.source,\n          }).fetch();\n          refs.forEach((refLabel) => {\n            let refIdObject = PageCollection.findOne({\n              name: \"LabelForId\",\n              source: refLabel,\n            });\n            if (!refIdObject)\n              console.log(\"Admin: id for label\", refLabel, \"not found\");\n            else if (!PageCollection.findOne({ _id: refIdObject.source }))\n              console.log(\n                \"Admin: Page for id\",\n                refIdObject.source,\n                \"for Reference\",\n                refLabel,\n                \"not found\"\n              );\n          });\n        }\n      });\n    },\n\n    // Making Player Book\n    makePlayerBook(bookData) {\n      const bookId = Random.id([17]);\n      //alert(\"Making book\");\n      let bookPages = [];\n      bookData.data.forEach((element) => {\n        const pageId = Random.id([17]);\n        element._id = pageId;\n        Meteor.call(\"insertItem\", element);\n        bookPages.push(pageId);\n      });\n      Meteor.call(\n        \"insertItem\",\n        this.makeBookObject(bookData, bookPages, bookId)\n      );\n    },\n    clearPages(selection) {\n      Meteor.call(\"deleteItem\", selection);\n      /*\n      const myPages = PageCollection.find(selection).fetch(); \n      myPages.forEach(e => Meteor.call('deleteItem',{_id: e._id}));\n      */\n      alert(\"Clear of selected data completed\");\n      if (!PageCollection.find({ title: \"|| Free Pages\" }))\n        Meteor.call(\"insertItem\", {\n          type: \"book\",\n          title: \"|| Free Pages\",\n          authors: \"Various Authors\",\n          description: \"Pages not assigned to any book\",\n          pages: [],\n        });\n    },\n    makeBookObject(bookData, bookPages, bookId) {\n      return {\n        _id: bookId,\n        type: \"book\",\n        title: bookData.title,\n        authors: bookData.authors,\n        description: bookData.description,\n        pages: bookPages,\n      };\n    },\n  },\n  meteor: {\n    pages() {\n      let pc = PageCollection.find({}).fetch();\n      return pc;\n    },\n    books() {\n      return PageCollection.find(\n        { type: \"book\" },\n        { sort: { title: 1 } }\n      ).fetch();\n    },\n  },\n};\n"]},"sourceType":"module","hash":"e7f7fd9fe35fb4ad217659114eef45879c71847d"}
